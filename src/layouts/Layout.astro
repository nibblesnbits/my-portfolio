---
import "../styles/global.css";

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const {
  title = "Juno Threadborne - Author",
  description = "Bending reality for sport",
  image = "/badge.webp",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- CSP -->
    <meta
      http-equiv="Content-Security-Policy"
      content="
        default-src 'self' https://junothreadborne.me;
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://junothreadborne.me https://www.googletagmanager.com https://www.clarity.ms https://scripts.clarity.ms https://scripts.clarity.ms https://cloudflareinsights.com https://static.cloudflareinsights.com https://cdn.jsdelivr.net https://fonts.googleapis.com;
        style-src 'self' 'unsafe-inline' https://junothreadborne.me https://cdn.jsdelivr.net https://fonts.googleapis.com;
        img-src 'self' data: https: https://junothreadborne.me;
        connect-src 'self' https://junothreadborne.me https://static.cloudflareinsights.com https://www.google-analytics.com https://analytics.google.com https://a.clarity.ms https://e.clarity.ms https://www.clarity.ms https://cloudflareinsights.com https://www.googletagmanager.com https://stats.g.doubleclick.net;
        font-src 'self' https://junothreadborne.me https://fonts.gstatic.com https://cdn.jsdelivr.net;
        object-src 'none';
        base-uri 'self';
        form-action 'self' https://junothreadborne.me;
        frame-src https://www.googletagmanager.com https://junothreadborne.me;"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <meta name="robots" content="index,follow" />
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- SEO Meta -->
    <meta name="author" content="Juno Threadborne" />
    <meta
      name="keywords"
      content="Juno Threadborne, speculative fiction, narrative technology, AI writing, digital storytelling, absurdist sci-fi"
    />
    <meta name="theme-color" content="#0f172a" />

    <!-- Open Graph (for LinkedIn, Facebook, etc.) -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content=`Juno Threadborne — ${title}` />
    <meta
      property="og:description"
      content="Explore the speculative and absurdist worlds of Juno Threadborne — where metaphor meets memory and the machine learns to feel."
    />
    <meta property="og:url" content="https://junothreadborne.me/" />
    <meta property="og:image" content={image} />
    <meta property="og:site_name" content="Juno Threadborne" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content=`Juno Threadborne — ${title}` />
    <meta
      name="twitter:description"
      content="Juno Threadborne, speculative fiction, narrative technology, AI writing, digital storytelling, absurdist sci-fi"
    />
    <meta name="twitter:image" content={image} />
    <meta name="twitter:creator" content="@junothreadborne" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- CRITICAL: CONSENT MODE MUST BE ABSOLUTELY FIRST -->
    <script>
      // Initialize dataLayer and gtag function IMMEDIATELY
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        window.dataLayer.push(arguments);
      }

      // ALWAYS set consent to denied first, regardless of saved preferences
      gtag("consent", "default", {
        ad_storage: "denied",
        ad_user_data: "denied",
        ad_personalization: "denied",
        analytics_storage: "denied",
        wait_for_update: 500,
      });

      // Then check for existing consent and update if granted
      try {
        const savedConsent = localStorage.getItem("cookie_consent");
        if (savedConsent === "yes") {
          gtag("consent", "update", {
            ad_storage: "granted",
            ad_user_data: "granted",
            ad_personalization: "granted",
            analytics_storage: "granted",
          });
        }
      } catch (e) {
        // localStorage might not be available
        console.log("localStorage not available");
      }
    </script>

    <!-- Google Tag Manager - AFTER consent setup -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-P66KZGWV");
    </script>
    <!-- End Google Tag Manager -->

    <!-- Microsoft Clarity -->
    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "rf3xb48jg8");
    </script>
  </head>

  <body
    class="min-h-screen bg-background font-sans antialiased selection:bg-purple-500/20 selection:text-purple-500"
  >
    <div class="sr-only hidden" itemscope itemtype="https://schema.org/Person">
      <h1 itemprop="name">Juno Threadborne</h1>
      <meta itemprop="alternateName" content="Stephen Collins" />
      <img
        itemprop="image"
        src="https://junothreadborne.me/badge.webp"
        alt="Juno Threadborne headshot"
      />
      <div>
        <span itemprop="jobTitle">Writer, Software Architect, and Educator</span
        >
      </div>
      <p itemprop="description">
        Juno Threadborne is a speculative and absurdist fiction writer exploring
        the threshold between technology, memory, and human connection.
      </p>

      <div>
        <strong>Website:</strong>
        <a itemprop="url" href="https://junothreadborne.me"
          >https://junothreadborne.me</a
        >
      </div>

      <div>
        <strong>Also known as:</strong>
        <ul>
          <li><a itemprop="sameAs" href="https://thrd.me">thrd.me</a></li>
          <li>
            <a itemprop="sameAs" href="https://junothreadborne.substack.com"
              >Substack</a
            >
          </li>
          <li>
            <a itemprop="sameAs" href="https://x.com/junothreadborne"
              >X (Twitter)</a
            >
          </li>
          <li>
            <a itemprop="sameAs" href="https://instagram.com/junothreadborne"
              >Instagram</a
            >
          </li>
          <li>
            <a itemprop="sameAs" href="https://linktr.ee/junothreadborne"
              >Linktree</a
            >
          </li>
          <li>
            <a
              itemprop="sameAs"
              href="https://bsky.app/profile/junothreadborne.me">Bluesky</a
            >
          </li>
          <li>
            <a itemprop="sameAs" href="https://dev.to/junothreadborne"
              >DEV Community</a
            >
          </li>
          <li>
            <a itemprop="sameAs" href="https://forem.com/junothreadborne"
              >Forem</a
            >
          </li>
          <li>
            <a
              itemprop="sameAs"
              href="https://blcklst.com/profile/junothreadborne"
              >The Black List</a
            >
          </li>
        </ul>
      </div>

      <div>
        <strong>Knows about:</strong>
        <ul>
          <li itemprop="knowsAbout">speculative fiction</li>
          <li itemprop="knowsAbout">narrative architecture</li>
          <li itemprop="knowsAbout">software systems</li>
          <li itemprop="knowsAbout">education technology</li>
          <li itemprop="knowsAbout">human-computer interaction</li>
        </ul>
      </div>

      <div
        itemprop="creator"
        itemscope
        itemtype="https://schema.org/Organization"
      >
        <strong>Created:</strong>
        <a itemprop="url" href="https://elsebeneath.online">
          <span itemprop="name">The Elsebeneath</span>
        </a>
      </div>
    </div>
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-P66KZGWV"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->
    <div
      class="fixed inset-0 -z-10 h-full w-full bg-background bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
    >
    </div>
    <slot />
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<style>
  html,
  body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    scroll-behavior: smooth;
  }

  :root {
    --transition-standard: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  body {
    transition:
      background-color var(--transition-standard),
      color var(--transition-standard);
  }
</style>
